/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/availableRooms",{

/***/ "./src/pages/availableRooms.tsx":
/*!**************************************!*\
  !*** ./src/pages/availableRooms.tsx ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*import { Inter } from \"next/font/google\";\nimport styles from \"@/styles/Home.module.css\";\nimport { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\ninterface Hotel {\n  id: number;\n  Name: string;\n  imageUrl: string;\n  Price: number;\n  City: string;\n  State_or_province: string;\n  Hotel_Chain: string;\n  Star_rating: number;\n  Number_of_rooms: number;\n  Available_Rooms: number;\n  Amenities: string;\n  View: string;\n  Phone: string;\n  Street: string;\n  Email: string;\n}\n\nexport default function availableRooms() {\n  const [availableHotels, setAvailableHotels] = useState<Hotel[]>([]);\n  const router = useRouter();\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      const {\n        startDate = '2023-04-09',\n        endDate = '2023-04-24',\n        roomCapacity = 'Double',\n        hotelCategory = '4',\n        priceRangeMin = '100',\n        priceRangeMax = '610',\n        area = 'NY',\n        hotelChain = 'Hilton Worldwide',\n      } = router.query;\n      // Use the search criteria to query the database or API for available rooms\n      const response = await fetch(\n        `/api/availableRooms?startDate=${startDate}&endDate=${endDate}&roomCapacity=${roomCapacity}&hotelCategory=${hotelCategory}&priceRangeMin=${priceRangeMin}&priceRangeMax=${priceRangeMax}&area=${area}&hotelChain=${hotelChain}`\n      );\n      const data = await response.json();\n      setAvailableHotels(data);\n    };\n    fetchRooms();\n  }, [router.query]);\n\n  const HotelRow = ({ hotel }: { hotel: Hotel }) => {\n    return (\n      <tr>\n        <td>{hotel.Name}</td>\n        <td>\n        <img src={hotel.imageUrl} alt={`Image of ${hotel.Name}`} style={{ maxWidth: '100px', maxHeight: '100px' }} />\n        </td>\n        <td>{hotel.Star_rating}</td>\n        <td>${hotel.Price}</td>\n        <td>{hotel.Amenities}</td>\n        <td>{hotel.View}</td>\n        <td>{hotel.Street}</td>\n        <td>{hotel.City}</td>\n        <td>{hotel.State_or_province}</td>\n        <td>{hotel.Hotel_Chain}</td>\n        <td>{hotel.Email}</td>\n        <td>{hotel.Phone}</td>\n        <td>\n          <button\n            onClick={() =>\n              router.push(\n                `/customerBooking?roomId=${hotel.id}&startDate=${router.query.startDate}&endDate=${router.query.endDate}`\n              )\n            }\n          >\n            Select\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <>\n      <h1>Available Rooms</h1>\n      <Link href=\"./homePage\">\n        <button style={{ marginRight: \"50px\", marginLeft: \"10px\" }} type=\"submit\">\n          Back To Search\n        </button>\n      </Link>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th>Hotel name</th>\n            <th>Image</th>\n            <th>Star rating</th>\n            <th>Price</th>\n            <th>Amenities</th>\n            <th>View</th>\n            <th>Street</th>\n            <th>City</th>\n            <th>State or province</th>\n            <th>Hotel chain</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {Array.isArray(availableHotels) &&\n            availableHotels.map((hotel) => <HotelRow key={hotel.id} hotel={hotel} />)}\n        </tbody>\n      </table>\n    </>\n  );\n}\n*/ \n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvYXZhaWxhYmxlUm9vbXMudHN4LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0hBLEdBdEhBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy9hdmFpbGFibGVSb29tcy50c3g/ZjE4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKmltcG9ydCB7IEludGVyIH0gZnJvbSBcIm5leHQvZm9udC9nb29nbGVcIjtcbmltcG9ydCBzdHlsZXMgZnJvbSBcIkAvc3R5bGVzL0hvbWUubW9kdWxlLmNzc1wiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmNvbnN0IGludGVyID0gSW50ZXIoeyBzdWJzZXRzOiBbXCJsYXRpblwiXSB9KTtcblxuaW50ZXJmYWNlIEhvdGVsIHtcbiAgaWQ6IG51bWJlcjtcbiAgTmFtZTogc3RyaW5nO1xuICBpbWFnZVVybDogc3RyaW5nO1xuICBQcmljZTogbnVtYmVyO1xuICBDaXR5OiBzdHJpbmc7XG4gIFN0YXRlX29yX3Byb3ZpbmNlOiBzdHJpbmc7XG4gIEhvdGVsX0NoYWluOiBzdHJpbmc7XG4gIFN0YXJfcmF0aW5nOiBudW1iZXI7XG4gIE51bWJlcl9vZl9yb29tczogbnVtYmVyO1xuICBBdmFpbGFibGVfUm9vbXM6IG51bWJlcjtcbiAgQW1lbml0aWVzOiBzdHJpbmc7XG4gIFZpZXc6IHN0cmluZztcbiAgUGhvbmU6IHN0cmluZztcbiAgU3RyZWV0OiBzdHJpbmc7XG4gIEVtYWlsOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGF2YWlsYWJsZVJvb21zKCkge1xuICBjb25zdCBbYXZhaWxhYmxlSG90ZWxzLCBzZXRBdmFpbGFibGVIb3RlbHNdID0gdXNlU3RhdGU8SG90ZWxbXT4oW10pO1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGZldGNoUm9vbXMgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHN0YXJ0RGF0ZSA9ICcyMDIzLTA0LTA5JyxcbiAgICAgICAgZW5kRGF0ZSA9ICcyMDIzLTA0LTI0JyxcbiAgICAgICAgcm9vbUNhcGFjaXR5ID0gJ0RvdWJsZScsXG4gICAgICAgIGhvdGVsQ2F0ZWdvcnkgPSAnNCcsXG4gICAgICAgIHByaWNlUmFuZ2VNaW4gPSAnMTAwJyxcbiAgICAgICAgcHJpY2VSYW5nZU1heCA9ICc2MTAnLFxuICAgICAgICBhcmVhID0gJ05ZJyxcbiAgICAgICAgaG90ZWxDaGFpbiA9ICdIaWx0b24gV29ybGR3aWRlJyxcbiAgICAgIH0gPSByb3V0ZXIucXVlcnk7XG4gICAgICAvLyBVc2UgdGhlIHNlYXJjaCBjcml0ZXJpYSB0byBxdWVyeSB0aGUgZGF0YWJhc2Ugb3IgQVBJIGZvciBhdmFpbGFibGUgcm9vbXNcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICAgIGAvYXBpL2F2YWlsYWJsZVJvb21zP3N0YXJ0RGF0ZT0ke3N0YXJ0RGF0ZX0mZW5kRGF0ZT0ke2VuZERhdGV9JnJvb21DYXBhY2l0eT0ke3Jvb21DYXBhY2l0eX0maG90ZWxDYXRlZ29yeT0ke2hvdGVsQ2F0ZWdvcnl9JnByaWNlUmFuZ2VNaW49JHtwcmljZVJhbmdlTWlufSZwcmljZVJhbmdlTWF4PSR7cHJpY2VSYW5nZU1heH0mYXJlYT0ke2FyZWF9JmhvdGVsQ2hhaW49JHtob3RlbENoYWlufWBcbiAgICAgICk7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgc2V0QXZhaWxhYmxlSG90ZWxzKGRhdGEpO1xuICAgIH07XG4gICAgZmV0Y2hSb29tcygpO1xuICB9LCBbcm91dGVyLnF1ZXJ5XSk7XG5cbiAgY29uc3QgSG90ZWxSb3cgPSAoeyBob3RlbCB9OiB7IGhvdGVsOiBIb3RlbCB9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDx0cj5cbiAgICAgICAgPHRkPntob3RlbC5OYW1lfTwvdGQ+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgPGltZyBzcmM9e2hvdGVsLmltYWdlVXJsfSBhbHQ9e2BJbWFnZSBvZiAke2hvdGVsLk5hbWV9YH0gc3R5bGU9e3sgbWF4V2lkdGg6ICcxMDBweCcsIG1heEhlaWdodDogJzEwMHB4JyB9fSAvPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQ+e2hvdGVsLlN0YXJfcmF0aW5nfTwvdGQ+XG4gICAgICAgIDx0ZD4ke2hvdGVsLlByaWNlfTwvdGQ+XG4gICAgICAgIDx0ZD57aG90ZWwuQW1lbml0aWVzfTwvdGQ+XG4gICAgICAgIDx0ZD57aG90ZWwuVmlld308L3RkPlxuICAgICAgICA8dGQ+e2hvdGVsLlN0cmVldH08L3RkPlxuICAgICAgICA8dGQ+e2hvdGVsLkNpdHl9PC90ZD5cbiAgICAgICAgPHRkPntob3RlbC5TdGF0ZV9vcl9wcm92aW5jZX08L3RkPlxuICAgICAgICA8dGQ+e2hvdGVsLkhvdGVsX0NoYWlufTwvdGQ+XG4gICAgICAgIDx0ZD57aG90ZWwuRW1haWx9PC90ZD5cbiAgICAgICAgPHRkPntob3RlbC5QaG9uZX08L3RkPlxuICAgICAgICA8dGQ+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT5cbiAgICAgICAgICAgICAgcm91dGVyLnB1c2goXG4gICAgICAgICAgICAgICAgYC9jdXN0b21lckJvb2tpbmc/cm9vbUlkPSR7aG90ZWwuaWR9JnN0YXJ0RGF0ZT0ke3JvdXRlci5xdWVyeS5zdGFydERhdGV9JmVuZERhdGU9JHtyb3V0ZXIucXVlcnkuZW5kRGF0ZX1gXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBTZWxlY3RcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8aDE+QXZhaWxhYmxlIFJvb21zPC9oMT5cbiAgICAgIDxMaW5rIGhyZWY9XCIuL2hvbWVQYWdlXCI+XG4gICAgICAgIDxidXR0b24gc3R5bGU9e3sgbWFyZ2luUmlnaHQ6IFwiNTBweFwiLCBtYXJnaW5MZWZ0OiBcIjEwcHhcIiB9fSB0eXBlPVwic3VibWl0XCI+XG4gICAgICAgICAgQmFjayBUbyBTZWFyY2hcbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L0xpbms+XG4gICAgICA8dGFibGUgY2xhc3NOYW1lPXtzdHlsZXMudGFibGV9PlxuICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAgPHRoPkhvdGVsIG5hbWU8L3RoPlxuICAgICAgICAgICAgPHRoPkltYWdlPC90aD5cbiAgICAgICAgICAgIDx0aD5TdGFyIHJhdGluZzwvdGg+XG4gICAgICAgICAgICA8dGg+UHJpY2U8L3RoPlxuICAgICAgICAgICAgPHRoPkFtZW5pdGllczwvdGg+XG4gICAgICAgICAgICA8dGg+VmlldzwvdGg+XG4gICAgICAgICAgICA8dGg+U3RyZWV0PC90aD5cbiAgICAgICAgICAgIDx0aD5DaXR5PC90aD5cbiAgICAgICAgICAgIDx0aD5TdGF0ZSBvciBwcm92aW5jZTwvdGg+XG4gICAgICAgICAgICA8dGg+SG90ZWwgY2hhaW48L3RoPlxuICAgICAgICAgICAgPHRoPkVtYWlsPC90aD5cbiAgICAgICAgICAgIDx0aD5QaG9uZTwvdGg+XG4gICAgICAgICAgICA8dGg+PC90aD5cbiAgICAgICAgICA8L3RyPlxuICAgICAgICA8L3RoZWFkPlxuICAgICAgICA8dGJvZHk+XG4gICAgICAgICAge0FycmF5LmlzQXJyYXkoYXZhaWxhYmxlSG90ZWxzKSAmJlxuICAgICAgICAgICAgYXZhaWxhYmxlSG90ZWxzLm1hcCgoaG90ZWwpID0+IDxIb3RlbFJvdyBrZXk9e2hvdGVsLmlkfSBob3RlbD17aG90ZWx9IC8+KX1cbiAgICAgICAgPC90Ym9keT5cbiAgICAgIDwvdGFibGU+XG4gICAgPC8+XG4gICk7XG59XG4qL1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/availableRooms.tsx\n"));

/***/ })

});