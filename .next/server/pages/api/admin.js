"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/admin";
exports.ids = ["pages/api/admin"];
exports.modules = {

/***/ "mysql":
/*!************************!*\
  !*** external "mysql" ***!
  \************************/
/***/ ((module) => {

module.exports = require("mysql");

/***/ }),

/***/ "(api)/./src/pages/api/admin.js":
/*!********************************!*\
  !*** ./src/pages/api/admin.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var mysql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql */ \"mysql\");\n/* harmony import */ var mysql__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function handler(req, res) {\n    const { action , table , data  } = req.body;\n    const client = mysql__WEBPACK_IMPORTED_MODULE_0___default().createConnection({\n        host: \"localhost\",\n        user: \"ehotel\",\n        port: 3306,\n        password: \"2132ehotel!\",\n        database: \"Hotels\"\n    });\n    client.connect((err)=>{\n        if (err) throw err;\n        console.log(\"Connected to the database!\");\n        // Add this line inside the connect callback to make sure the connection is established before performing any action\n        performAction();\n    });\n    // Move the switch statement and related functions into a new function called performAction\n    function performAction() {\n        switch(action){\n            case \"insert\":\n                insertData(table, data, res);\n                break;\n            case \"delete\":\n                deleteData(table, data, res);\n                break;\n            case \"update\":\n                updateData(table, data, res);\n                break;\n            case \"get\":\n                getData(table, res);\n                break;\n            default:\n                res.status(400).json({\n                    message: \"Invalid action\"\n                });\n        }\n    }\n    // Add a new function called closeConnection to close the MySQL connection\n    function closeConnection() {\n        client.end((err)=>{\n            if (err) throw err;\n            console.log(\"Disconnected from the database!\");\n        });\n    }\n    function insertData(table, data, res) {\n        const keys = Object.keys(data).join(\", \");\n        const values = Object.values(data).map((value)=>typeof value === \"string\" ? `'${value}'` : value).join(\", \");\n        const query = `INSERT INTO ${table} (${keys}) VALUES (${values})`;\n        client.query(query, (err, result)=>{\n            if (err) throw err;\n            res.status(200).json({\n                message: \"Record inserted\",\n                insertId: result.insertId\n            });\n        });\n    }\n    function deleteData(table, data, res) {\n        const { idColumn , id  } = data;\n        const query = `DELETE FROM ${table} WHERE ${idColumn} = ${id}`;\n        console.log(\"Executing query:\", query);\n        client.query(query, (err, result)=>{\n            if (err) throw err;\n            res.status(200).json({\n                message: \"Record deleted\",\n                affectedRows: result.affectedRows\n            });\n        });\n    }\n    function updateData(table, data, res) {\n        const { idColumn , id , updates  } = data;\n        const updateString = Object.entries(updates).map(([key, value])=>`${key} = ${typeof value === \"string\" ? `'${value}'` : value}`).join(\", \");\n        const query = `UPDATE ${table} SET ${updateString} WHERE ${idColumn} = ${id}`;\n        client.query(query, (err, result)=>{\n            if (err) throw err;\n            res.status(200).json({\n                message: \"Record updated\",\n                affectedRows: result.affectedRows\n            });\n        });\n    }\n    function getData(table, res) {\n        const query = `SELECT * FROM ${table}`;\n        client.query(query, (err, result)=>{\n            if (err) throw err;\n            res.status(200).json({\n                data: result\n            });\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QztRQUNsQyxNQUFNb0MsZUFBZVosT0FBT2EsT0FBTyxDQUFDRixTQUNqQ1IsR0FBRyxDQUFDLENBQUMsQ0FBQ1csS0FBS1YsTUFBTSxHQUFLLENBQUMsRUFBRVUsSUFBSSxHQUFHLEVBQUUsT0FBT1YsVUFBVSxXQUFXLENBQUMsQ0FBQyxFQUFFQSxNQUFNLENBQUMsQ0FBQyxHQUFHQSxLQUFLLENBQUMsQ0FBQyxFQUNwRkgsSUFBSSxDQUFDO1FBRVIsTUFBTUksUUFBUSxDQUFDLE9BQU8sRUFBRTlCLE1BQU0sS0FBSyxFQUFFcUMsYUFBYSxPQUFPLEVBQUVKLFNBQVMsR0FBRyxFQUFFQyxHQUFHLENBQUM7UUFFN0UvQixPQUFPMkIsS0FBSyxDQUFDQSxPQUFPLENBQUNuQixLQUFLb0IsU0FBVztZQUNuQyxJQUFJcEIsS0FBSyxNQUFNQSxJQUFJO1lBQ25CYixJQUFJcUIsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztnQkFBa0JjLGNBQWNKLE9BQU9JLFlBQVk7WUFBQztRQUN0RjtJQUNGO0lBRUEsU0FBU2pCLFFBQVFsQixLQUFLLEVBQUVGLEdBQUcsRUFBRTtRQUMzQixNQUFNZ0MsUUFBUSxDQUFDLGNBQWMsRUFBRTlCLE1BQU0sQ0FBQztRQUV0Q0csT0FBTzJCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDbkIsS0FBS29CLFNBQVc7WUFDbkMsSUFBSXBCLEtBQUssTUFBTUEsSUFBSTtZQUNuQmIsSUFBSXFCLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVuQixNQUFNOEI7WUFBTztRQUN0QztJQUNGO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Vob3RlbC8uL3NyYy9wYWdlcy9hcGkvYWRtaW4uanM/N2U0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwnO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBjb25zdCB7IGFjdGlvbiwgdGFibGUsIGRhdGEgfSA9IHJlcS5ib2R5O1xuICBjb25zdCBjbGllbnQgPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcbiAgICBob3N0OiBcImxvY2FsaG9zdFwiLFxuICAgIHVzZXI6IFwiZWhvdGVsXCIsXG4gICAgcG9ydDogMzMwNixcbiAgICBwYXNzd29yZDogXCIyMTMyZWhvdGVsIVwiLFxuICAgIGRhdGFiYXNlOiBcIkhvdGVsc1wiLFxuICB9KTtcblxuICBcblxuICBjbGllbnQuY29ubmVjdCgoZXJyKSA9PiB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGVkIHRvIHRoZSBkYXRhYmFzZSFcIik7XG4gICAgXG4gICAgLy8gQWRkIHRoaXMgbGluZSBpbnNpZGUgdGhlIGNvbm5lY3QgY2FsbGJhY2sgdG8gbWFrZSBzdXJlIHRoZSBjb25uZWN0aW9uIGlzIGVzdGFibGlzaGVkIGJlZm9yZSBwZXJmb3JtaW5nIGFueSBhY3Rpb25cbiAgICBwZXJmb3JtQWN0aW9uKCk7XG4gIH0pO1xuICBcbiAgLy8gTW92ZSB0aGUgc3dpdGNoIHN0YXRlbWVudCBhbmQgcmVsYXRlZCBmdW5jdGlvbnMgaW50byBhIG5ldyBmdW5jdGlvbiBjYWxsZWQgcGVyZm9ybUFjdGlvblxuICBmdW5jdGlvbiBwZXJmb3JtQWN0aW9uKCkge1xuICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICBjYXNlICdpbnNlcnQnOlxuICAgICAgICBpbnNlcnREYXRhKHRhYmxlLCBkYXRhLCByZXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2RlbGV0ZSc6XG4gICAgICAgIGRlbGV0ZURhdGEodGFibGUsIGRhdGEsIHJlcyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndXBkYXRlJzpcbiAgICAgICAgdXBkYXRlRGF0YSh0YWJsZSwgZGF0YSwgcmVzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdnZXQnOlxuICAgICAgICBnZXREYXRhKHRhYmxlLCByZXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ0ludmFsaWQgYWN0aW9uJyB9KTtcbiAgICB9XG4gIH1cbiAgXG4gIC8vIEFkZCBhIG5ldyBmdW5jdGlvbiBjYWxsZWQgY2xvc2VDb25uZWN0aW9uIHRvIGNsb3NlIHRoZSBNeVNRTCBjb25uZWN0aW9uXG4gIGZ1bmN0aW9uIGNsb3NlQ29ubmVjdGlvbigpIHtcbiAgICBjbGllbnQuZW5kKChlcnIpID0+IHtcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICAgIGNvbnNvbGUubG9nKFwiRGlzY29ubmVjdGVkIGZyb20gdGhlIGRhdGFiYXNlIVwiKTtcbiAgICB9KTtcbiAgfVxuICBcblxuICBcblxuICBmdW5jdGlvbiBpbnNlcnREYXRhKHRhYmxlLCBkYXRhLCByZXMpIHtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoZGF0YSkuam9pbignLCAnKTtcbiAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKGRhdGEpXG4gICAgICAubWFwKHZhbHVlID0+IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgPyBgJyR7dmFsdWV9J2AgOiB2YWx1ZSlcbiAgICAgIC5qb2luKCcsICcpO1xuXG4gICAgY29uc3QgcXVlcnkgPSBgSU5TRVJUIElOVE8gJHt0YWJsZX0gKCR7a2V5c30pIFZBTFVFUyAoJHt2YWx1ZXN9KWA7XG5cbiAgICBjbGllbnQucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiAnUmVjb3JkIGluc2VydGVkJywgaW5zZXJ0SWQ6IHJlc3VsdC5pbnNlcnRJZCB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlbGV0ZURhdGEodGFibGUsIGRhdGEsIHJlcykge1xuICAgIGNvbnN0IHsgaWRDb2x1bW4sIGlkIH0gPSBkYXRhO1xuICAgIGNvbnN0IHF1ZXJ5ID0gYERFTEVURSBGUk9NICR7dGFibGV9IFdIRVJFICR7aWRDb2x1bW59ID0gJHtpZH1gO1xuXG4gICAgY29uc29sZS5sb2coJ0V4ZWN1dGluZyBxdWVyeTonLCBxdWVyeSk7XG4gICAgY2xpZW50LnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogJ1JlY29yZCBkZWxldGVkJywgYWZmZWN0ZWRSb3dzOiByZXN1bHQuYWZmZWN0ZWRSb3dzIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlRGF0YSh0YWJsZSwgZGF0YSwgcmVzKSB7XG4gICAgY29uc3QgeyBpZENvbHVtbiwgaWQsIHVwZGF0ZXMgfSA9IGRhdGE7XG4gICAgY29uc3QgdXBkYXRlU3RyaW5nID0gT2JqZWN0LmVudHJpZXModXBkYXRlcylcbiAgICAgIC5tYXAoKFtrZXksIHZhbHVlXSkgPT4gYCR7a2V5fSA9ICR7dHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IGAnJHt2YWx1ZX0nYCA6IHZhbHVlfWApXG4gICAgICAuam9pbignLCAnKTtcblxuICAgIGNvbnN0IHF1ZXJ5ID0gYFVQREFURSAke3RhYmxlfSBTRVQgJHt1cGRhdGVTdHJpbmd9IFdIRVJFICR7aWRDb2x1bW59ID0gJHtpZH1gO1xuXG4gICAgY2xpZW50LnF1ZXJ5KHF1ZXJ5LCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogJ1JlY29yZCB1cGRhdGVkJywgYWZmZWN0ZWRSb3dzOiByZXN1bHQuYWZmZWN0ZWRSb3dzIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGF0YSh0YWJsZSwgcmVzKSB7XG4gICAgY29uc3QgcXVlcnkgPSBgU0VMRUNUICogRlJPTSAke3RhYmxlfWA7XG5cbiAgICBjbGllbnQucXVlcnkocXVlcnksIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBkYXRhOiByZXN1bHQgfSk7XG4gICAgfSk7XG4gIH1cbn0iXSwibmFtZXMiOlsibXlzcWwiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwiYWN0aW9uIiwidGFibGUiLCJkYXRhIiwiYm9keSIsImNsaWVudCIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBvcnQiLCJwYXNzd29yZCIsImRhdGFiYXNlIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJwZXJmb3JtQWN0aW9uIiwiaW5zZXJ0RGF0YSIsImRlbGV0ZURhdGEiLCJ1cGRhdGVEYXRhIiwiZ2V0RGF0YSIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiY2xvc2VDb25uZWN0aW9uIiwiZW5kIiwia2V5cyIsIk9iamVjdCIsImpvaW4iLCJ2YWx1ZXMiLCJtYXAiLCJ2YWx1ZSIsInF1ZXJ5IiwicmVzdWx0IiwiaW5zZXJ0SWQiLCJpZENvbHVtbiIsImlkIiwiYWZmZWN0ZWRSb3dzIiwidXBkYXRlcyIsInVwZGF0ZVN0cmluZyIsImVudHJpZXMiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/admin.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/admin.js"));
module.exports = __webpack_exports__;

})();